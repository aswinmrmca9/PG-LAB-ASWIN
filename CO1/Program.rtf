{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Times New Roman;}}
{\colortbl ;\red0\green0\blue0;}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs22\lang9 CO1 Program\par
Program 1\par
\cf1\b0\f1\fs26 Familiarizing Text Editor, IDE, Code Analysis Tools etc // Use any IDE \par
\b PyCharm\par
Pycharm\b0  is a dedicated Python Integrated Development Environment (IDE) providing a wide range of essential tools for Python developers, tightly integrated to create a convenient environment for productive Python, web, and data science development.\par
\b Spyder\par
Spyder\b0  is an open-source cross-platform integrated development environment (IDE) for scientific programming in the Python language. ... Spyder uses Qt for its GUI and is designed to use either of the PyQt or PySide Python bindings.\par
\b RODEO\par
RODEO\b0 , that is an open source python IDE and has been brought up by the folks at yhat, is a development environment that is lightweight, intuitive and yet customizable to its very core and also contains all the features mentioned above that were searched for so long\par
\cf0\f0\fs22\par
\b Program 2\par

\pard\sl240\slmult1\b0\f1\fs26 Display future leap years from current year to a final year entered by user.\par

\pard\sa200\sl276\slmult1\f0\fs22\par
a=int(input("enter the starting year="))\par
b=int(input("enter the end year="))\par
if(a<b):\par
    print("Leap year")\par
    for i in range(a,b):\par
        if(i%4==0 and i%100!=0):\par
            print(i,end=" ")\par
\ul Output\par
\ulnone enter the starting year=2021\par
enter the end year=2050\par
Leap year\par
2024 2028 2032 2036 2040 2044 2048 \par

\pard\sa160\sl259\slmult0\b Program 3(a)\par

\pard\sl240\slmult1\f1\fs26 List comprehensions:\par

\pard\sa160\sl259\slmult0 Generate positive list of numbers from a given list of\expndtw-12  \expndtw0 integers\f0\fs22\par
\b0 lt =[-10,20,35,-67,70]\par
r=[n for n in lt if n>=0]\par
print(r)\par
\b output\par
\b0 [20, 35, 70]\par
\b program 3(b)\par
\f1\fs26 Square of N\expndtw-2  \expndtw0 number\f0\fs22\par
\b0 n=int(input("Enter the limit"))\par
sqlist= [ i**2 for i in range(1,n+1)] \par
print("Square of N numbers : ", sqlist)\par
\b output\par
\b0 Enter the limit4\par
Square of N numbers :  [1, 4, 9, 16]\par
\b program 3(c)\par

\pard\sl240\slmult1\tx522\f1\fs26 Form a list of vowels selected from a given\expndtw-15  \expndtw0 word\par

\pard\sa160\sl259\slmult0\f0\fs22\par
\b0 w =str(input("Enter the word :"))\par
print("The original string is : "+w)\par
print("The vowel are : ",end="")\par
for i in w:\par
 \tab if i in 'aeiouAEIOU':\par
 \tab\tab print([i],end=" ")\par
\b output\par
\b0 Enter the word :Python Programming\par
The original string is : Python Programming\par
The vowel are : ['o'] ['o'] ['a'] ['i']\par
\b program 3(d)\par

\pard\sl240\slmult1\tx553\f1\fs26 List ordinal value of each element of a word (Hint: use ord() to get ordinal\expndtw-18  \expndtw0 values)\par

\pard\sa160\sl259\slmult0\f0\fs22\par
\b0 word=input("Enter a word:")\par
print("Ordinal values corresponding to each element is:") \par
for i in word:\par
\tab print(i,end=":")\par
\tab print(ord(i),end=" ")\par
\b output\par
\b0 Enter a word:PYTHON\par
Ordinal values corresponding to each element is:\par
P:80 Y:89 T:84 H:72 O:79 N:78\par
\b Program 4\par
\f1\fs26 Count the occurrences of each word in a line of text.\par
\f0\fs22\par
\b0 str1 = input("Enter a string : ")\par
word = str1.split()\par
count= []\par
for w in word:\par
\tab count.append(word.count(w))\par
\tab print("count of the occurrence:" + str(list(zip(word, count))))\par
\b output\par
\b0 Enter a string : Python programming\par
count of the occurrence:[('Python', 1)]\par
count of the occurrence:[('Python', 1), ('programming', 1)]\par
\b\fs24 Program 5\fs22\par

\pard\li140\sb185\sl240\slmult1\f1\fs26 Prompt\expndtw-14  \expndtw0 the\expndtw-14  \expndtw0 user\expndtw-14  \expndtw0 for\expndtw-14  \expndtw0 a\expndtw-13  \expndtw0 list\expndtw-14  \expndtw0 of\expndtw-14  \expndtw0 integers.\expndtw-11  \expndtw0 For\expndtw-13  \expndtw0 all\expndtw-14  \expndtw0 values\expndtw-13  \expndtw0 greater\expndtw-14  \expndtw0 than\expndtw-13  \expndtw0 100,\expndtw-14  \expndtw0 store\expndtw-14  \expndtw0\lquote over\rquote\expndtw-14  \expndtw0 instead\fs28\par

\pard\sa160\sl259\slmult0\f0\fs22\par
\b0 n=[]\par
s=int(input("Enter a limit:"))\par
print("Enter \{s\} values")\par
for i in range(0,s): \par
\tab n.append(int(input()))\par
print("\\nThe list after assinging:\\n")\par
for i in range(0,len(n)):\par
\tab if(n[i]>=100):\par
\tab\tab print("over") \par
\tab else:\par
\tab\tab print(n[i])\par
\b output\par
\b0 Enter a limit:2\par
Enter \{s\} values\par
24\par
199\par
\par
The list after assinging:\par
\par
24\par
Over\par
\par

\pard\sa200\sl276\slmult1\b Program 6\par

\pard\li140\sb184\sl240\slmult1\f1\fs28 Store a list of first names. Count the occurrences of \lquote a\rquote  within the list\par

\pard\sa200\sl276\slmult1\f0\fs22\par
\b0 list1=["a","d","c","a","a","a","a",]\par
c=list1.count("a")\par
print("Occurrence of a=",c)\par
\b Output\b0\par
Occurrence of a= 5\par
\b\fs24 Program 7\par

\pard\li140\ri161\sb185\sa160\sl259\slmult0 Enter 2 lists of integers. Check \par
(a) Whether list are of same length (b) whether list sums to same value (c) whether any value occur in both\par

\pard\sa200\sl276\slmult1\fs22\par

\pard\sa160\sl259\slmult0\b0 lst=[1,3,5,7,9,11,34]\par
lst1=[5,13,45,7,20,65,1]\par
s=int(0)\par
c=int(0)\par
if(len(lst)==len(lst1)):\par
\tab print("Lists are of same length")\par
else:\par
\tab print("Lists have different length")\par
for i in range(0,len(lst) and len(lst1)):\par
\tab s=s+lst[i]\par
\tab c=c+lst1[i]\par
if(s==c):\par
\tab print("equal sum")\par
else:\par
\tab print("not same sum")\par
print("Elements that matched are:")\par
l=[]\par
for i in range(0,len(lst)):\par
\tab for j in range(0,len(lst1)):\par
\tab\tab if lst[i]==lst1[j]:\par
\tab\tab\tab l.append(lst[i] and lst1[j])\par
\tab\tab else:\par
\tab\tab\tab continue\par
print(l)\par
\b\par
output\par
\b0 Lists are of same length\par
not same sum\par
Elements that matched are:\par
[1, 5, 7]\par

\pard\sa200\sl276\slmult1\par
\b Program 8\par

\pard\sb9\sl240\slmult1\cf1\f1\fs24 Get a string from an input string where all occurrences of first character replaced with \lquote $\rquote , except first character. [eg: onion -> oni$n]\b0\fs26\par

\pard\sa200\sl276\slmult1\cf0\b\f0\fs22\par
\b0 str2="onion"\par
char=str2[0]\par
str2=str2.replace(char,'$')\par
str2=char+str2[1:]\par
print(str2)\par
\b output\par
\b0 oni$n\par
\b Program 9\par

\pard\li140\sb77\sl240\slmult1\f1\fs24 Create a string from given string where first and last characters exchanged. [eg: python -> nythop]\par

\pard\sa200\sl276\slmult1\f0\fs22\par

\pard\sa160\sl259\slmult0\b0 str=input("Enter a string:")\par
nstr=str[-1:] +str[1:-1] + str[:1]\par
print("New string : ",nstr)\par
\b Output\par
\b0 Enter a string:Python\par
New string :  nythoP\par

\pard\sa200\sl276\slmult1\par
\b Program 10\par
\f1\fs26 Accept the radius from user and find area of circle.\f0\fs22\par
\b0 r=float(input("Enter the radius="))\par
pi=3.14\par
area=pi*r*r\par
print("Area of circle=",area)\par
\ul\b output\b0\par
\ulnone Enter the radius=5\par
Area of circle= 78.5\par
\b Program 11\par

\pard\li140\sl240\slmult1\f1\fs26 Find biggest of 3 numbers entered\b0\par

\pard\sa200\sl276\slmult1\b\f0\fs22\par
\b0 x=int(input("enter the number="))\par
y=int(input("enter the number="))\par
z=int(input("enter the number="))\par
if(x>y):\par
    if(x>z):\par
        print("x is large",x)\par
    else:\par
        print("z is large",z)\par
else:\par
    if(y>z):\par
        print("y is large",y)\par
    else:\par
        print("z is large",z)\par
\ul\b output\ulnone\b0\par
enter the number=5\par
enter the number=7\par
enter the number=2\par
y is large 7\par
\par
\b Program 12\par

\pard\li140\sl240\slmult1\f1\fs24 Accept a file name from user and print extension of that\fs28\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
x,y=input("Enter the file name=").split(".")\par
print("Extension of file=",y)\par
\ul\b Output\b0\par
\ulnone Enter the file name=program.java\par
Extension of file= java\par
\par
\b Program 13\par

\pard\li140\sb187\sl259\slmult0\cf1\f1\fs26 Create a list of colors from comma-separated color names entered by user.Display first and last\expndtw-2  \expndtw0 colors.\fs28\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22\par
\b0 a=[]\par
for i in range(3): \par
    b=input("enter the color:")\par
    a.append(b)\par
print(a)\par
print(a[0])\par
print(a[2])\par
\ul\b\par
output\par
\ulnone\b0 enter the color:red\par
enter the color:blue\par
enter the color:green\par
['red', 'blue', 'green']\par
red\par
green\par
\par
\par
\b Program 14\par

\pard\li140\sb1\sl240\slmult1\f1\fs28 Accept an integer n and compute n+nn+nnn\par

\pard\sa200\sl276\slmult1\f0\fs22\par
\b0 n=input("Enter the number n=")\par
x=int(n+n+n)\par
y=int(n+n)\par
z=int(n)\par
print("n+nn+nnn=",x+y+z)\par
\ul\b Output\b0\par
\ulnone Enter the number n=5\par
n+nn+nnn= 615\par
\b Program 15\par
\f1\fs28 Print out all colors from color-list1 not contained in color-list2.\f0\fs22\par
\b0 list1=set(["Red","blue","green","white"])\par
list2=set(["Yellow","blue","Black","white"])\par
c=list1.difference(list2)\par
print(c)\par
\ul\b Output\b0\par
\ulnone\{'green', 'Red'\}\par
\b Program 16\par
\cf1\f1\fs24 Create a single string separated with space from two strings by swapping the character at position 1.\cf0\f0\fs22\par
\b0 str1="python"\par
str2="java"\par
s1=str1[0]\par
s2=str2[0]\par
print(s2+str1[1:]+" "+s1+str2[1:])\par
\ul\b Output\b0\par
\ulnone jython pava\par
\b Program 19\par

\pard\li140\sb77\sl240\slmult1\f1\fs26 Find gcd of 2 numbers.\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
a=int(input("Enter the 1st number="))\par
b=int(input("Enter the 2nd number="))\par
i=1\par
gcd=0\par
while(i<=a and i<=b):\par
    if(a%i==0 and b%i==0):\par
        gcd=i\par
    i=i+1\par
print("GCD =",gcd)\par
\ul\b Output\b0\par
\ulnone Enter the 1st number=120\par
Enter the 2nd number=5\par
GCD= 5\par

\pard\sa160\sl259\slmult0\b Program 20\par

\pard\li140\sb185\sl240\slmult1\f1\fs28 From a list of integers, create a list removing even numbers.\par

\pard\sa160\sl259\slmult0\f0\fs22\par
\b0 num = [7,8, 120, 25, 44, 20, 27]\par
print( "Original list:",num)\par
num = [x for x in num if x%2!=0]\par
print("list after removing Even numbers:",num)\par
\b output\par
\b0 Original list: [7, 8, 120, 25, 44, 20, 27]\par
list after removing Even numbers: [7, 25, 27]\par

\pard\sa200\sl276\slmult1\par
\par
\b\par
\par
}
 